Here, we will see that we get error messages when we try to submit
translations with errors.

First, we need to define a function to see that the message we are
interested on doesn't have any translation.

    >>> user_browser.open(
    ...     "http://translations.launchpad.test/ubuntu/hoary/+source/"
    ...     "evolution/+pots/evolution-2.2/es/+translate?start=20")

We are going to change message #21, but first, we see that this messages
has no translations at all.

    >>> print(find_tag_by_id(
    ...     user_browser.contents, 'msgset_150').decode_contents())
    21.
    <input name="msgset_150" type="hidden"/>
    >>> print(find_tag_by_id(
    ...     user_browser.contents, 'msgset_150_singular').decode_contents())
    Found <code>%i</code> invalid file.
    >>> print(find_tag_by_id(user_browser.contents,
    ...                      'msgset_150_es_translation_0').decode_contents())
    (no translation yet)
    >>> print(find_tag_by_id(user_browser.contents,
    ...                      'msgset_150_es_translation_1').decode_contents())
    (no translation yet)

We are going to submit now translations for the singular and plural forms.
We also need to set the checkbox to True so the submit takes care of that
submission and doesn't ignore it.

    >>> user_browser.getControl(
    ...     name='msgset_150_es_translation_0_radiobutton').value = [
    ...         'msgset_150_es_translation_0_new']
    >>> user_browser.getControl(
    ...     name='msgset_150_es_translation_0_new').value = (
    ...         u'Found %s invalid file')
    >>> user_browser.getControl(
    ...     name='msgset_150_es_translation_1_radiobutton').value = [
    ...         'msgset_150_es_translation_1_new']
    >>> user_browser.getControl(
    ...     name='msgset_150_es_translation_1_new').value = (
    ...     u'Found %s invalid files')
    >>> user_browser.getControl(name='submit_translations').click()

Because of the error, we're still in on the same page.

    >>> print(user_browser.url)
    http://.../hoary/+source/evo.../+pots/evo...-2.2/es/+translate?start=20

And we can see the error.

    >>> for tag in find_tags_by_class(user_browser.contents, 'error'):
    ...     print(extract_text(tag))
    There is an error in a translation you provided.
    Please correct it before continuing.
    Error in Translation:
    format specifications in 'msgid...' and 'msgstr[0]' for argument 1 are
    not the same
    format specifications in 'msgid...' and 'msgstr[1]' for argument 1 are
    not the same

The translation form got an error with the translations we wanted to store,
and thus we still have that text as part of translations input, otherwise,
they will be empty waiting for new suggestions/translations.

    >>> user_browser.getControl(name='msgset_150_es_translation_0_new').value
    'Found %s invalid file'
    >>> user_browser.getControl(name='msgset_150_es_translation_1_new').value
    'Found %s invalid files'

Also, we can see that the message has no active translation yet:

    >>> print(find_tag_by_id(
    ...     user_browser.contents, 'msgset_150').decode_contents())
    21.
    <input name="msgset_150" type="hidden"/>
    >>> print(find_tag_by_id(
    ...     user_browser.contents, 'msgset_150_singular').decode_contents())
    Found <code>%i</code> invalid file.
    >>> print(find_tag_by_id(user_browser.contents,
    ...                      'msgset_150_es_translation_0').decode_contents())
    (no translation yet)
    >>> print(find_tag_by_id(user_browser.contents,
    ...                      'msgset_150_es_translation_1').decode_contents())
    (no translation yet)

Translations for DistroSeries
=============================

First, we need to ensure that we can see the distroseries translations
page, and that it has all the data we are expecting, in terms of languages.

    >>> from lp.testing.pages import extract_url_parameter
    >>> browser.open('http://translations.launchpad.test/ubuntu/hoary/'
    ...     '+translations')
    >>> six.ensure_str('Translation status by language') in browser.contents
    True
    >>> print(browser.getLink('Catalan').url)
    http://translations.launchpad.test/ubuntu/hoary/+lang/ca
    >>> print(browser.getLink('Xhosa').url)
    http://translations.launchpad.test/ubuntu/hoary/+lang/xh
    >>> browser.getLink('Afrihili')
    Traceback (most recent call last):
    ...
    zope.testbrowser.browser.LinkNotFoundError

We also should see any personal language that is not already translated, but
which is in the personal pref list. In this example, we tell the system that
our browser speaks Afrihili, and since the user is anonymous the system will
put Afrihili into the list of "preferred languages".

    >>> browser.addHeader('Accept-Language', 'en-us,en;q=0.7,afh;q=0.3')
    >>> browser.open('http://translations.launchpad.test/ubuntu/hoary/'
    ...     '+translations')
    >>> six.ensure_str('Translation status by language') in browser.contents
    True
    >>> print(browser.getLink('Catalan').url)
    http://translations.launchpad.test/ubuntu/hoary/+lang/ca
    >>> print(browser.getLink('Xhosa').url)
    http://translations.launchpad.test/ubuntu/hoary/+lang/xh
    >>> print(browser.getLink('Afrihili').url)
    http://translations.launchpad.test/ubuntu/hoary/+lang/afh

If we select Croatian, we would expect to see the list of source package
templates, and in the sample data we should have a croatian pofile for
pmount. Note that we should also have an empty pofile (really a dummy
pofile) for evolution-2.2

    >>> browser.open(
    ...     'http://translations.launchpad.test/ubuntu/hoary/+lang/hr'
    ...     '?batch=2')
    >>> six.ensure_str('Croatian') in browser.contents
    True
    >>> six.ensure_str('Translatable templates') in browser.contents
    True
    >>> print(browser.getLink('evolution-2.2').url)  # noqa
    http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/hr/+translate
    >>> print(browser.getLink('man').url)  # noqa
    http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/man/hr/+translate

pmount and pkgconf-mozilla are not in this page, because it belongs to the
next batch.

    >>> browser.getLink('pkgconf-mozilla')
    Traceback (most recent call last):
    ...
    zope.testbrowser.browser.LinkNotFoundError
    >>> browser.getLink('pmount')
    Traceback (most recent call last):
    ...
    zope.testbrowser.browser.LinkNotFoundError

Let's go to next page.

    >>> browser.getLink('Next').click()

Now, we have the other man and pkgconf-mozilla:

    >>> print(browser.getLink('man').url)  # noqa
    http://translations.launchpad.test/ubuntu/hoary/+source/pmount/+pots/man/hr/+translate
    >>> print(browser.getLink('pkgconf-mozilla').url)  # noqa
    http://translations.launchpad.test/ubuntu/hoary/+source/mozilla/+pots/pkgconf-mozilla/hr/+translate

Let's go to next page.

    >>> browser.getLink('Next').click()

And finally, we will get pmount.

    >>> print(browser.getLink('pmount').url)  # noqa
    http://translations.launchpad.test/ubuntu/hoary/+source/pmount/+pots/pmount/hr/+translate

With its latest translator.

    >>> six.ensure_str('Edgar Bursic') in browser.contents
    True

Last translator
---------------

When there's no reviewer and date of review on a last touched PO message
inside a PO file (for example, when it was uploaded from the package), the
last translator is displayed.

    >>> browser.open(
    ...     'http://translations.launchpad.test/ubuntu/hoary/+lang/de')
    >>> print(extract_text(
    ...     find_tag_by_id(browser.contents, "pkgconf-mozilla-time")))
    2005-05-06
    >>> print(extract_text(
    ...     find_tag_by_id(browser.contents, "pkgconf-mozilla-person")))
    Helge Kreutzmann

DummyPOFile
-----------

There are no translations yet for pmount into Portuguese. Carlos has
decided to start contributing translations to that package.

    >>> browser = setupBrowser(auth='Basic carlos@canonical.com:test')
    >>> browser.open(
    ...     'http://translations.launchpad.test/ubuntu/hoary/+source/pmount/'
    ...     '+pots/pmount/pt_BR/+translate')

Then he decides that he only wants to filter on untranslated entries (he's
not aware that this translation is actually empty, i.e. there is no such PO
file):

    >>> browser.getControl(name='show', index=1).value = ['untranslated']
    >>> browser.getControl('Change').click()
    >>> print(extract_url_parameter(browser.url, 'batch'))
    batch=10
    >>> print(extract_url_parameter(browser.url, 'show'))
    show=untranslated
    >>> six.ensure_str('10.') in browser.contents
    True

If everything works out ok, that means that DummyPOFile has actually
returned all untranslated entries.

Finally, lets also check that translated entries show up as well.

    >>> browser.getControl(name='show', index=1).value = ['translated']
    >>> browser.getControl('Change').click()
    >>> print(extract_url_parameter(browser.url, 'show'))
    show=translated
    >>> six.ensure_str(
    ...     "There are no messages that match this filtering.") in (
    ...         browser.contents)
    True

Links to filtered pages
-----------------------

The DistroSeries per-language overview page shows different statistics:
a count of untranslated messages, messages with new, unreviewed suggestions,
and a count of messages which had their imported translations changed in
Ubuntu.

Looking at the Spanish language overview page, we can see that there are
15 untranslated, 1 unreviewed and 1 changed in Ubuntu Evolution translations
(all numbers repeated as hidden 'sortkey' values).

    >>> browser.open(
    ...     'http://translations.launchpad.test/ubuntu/hoary/+lang/es')
    >>> evolution_line = find_tag_by_id(browser.contents, 'evolution-2.2')
    >>> print(extract_text(evolution_line))
    evolution-2.2
    15 1 1
    ...

The template title points to the general translate page:

    # We are not using browser.getLink because there is no unique way to
    # get all of the relevant links, and we don't want to pollute the
    # page template with too many IDs useful only for testing.
    >>> all_links = evolution_line.find_all('a')
    >>> base_href = browser.url
    >>> unfiltered = all_links[0]
    >>> print(extract_text(unfiltered))
    evolution-2.2
    >>> print(extract_link_from_tag(unfiltered, base_href))  # noqa
    http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate

The number of untranslated entries points to the same page, which now show
only untranslated items. When we follow this link, the filtering combo box
has the right filter preselected.

    >>> untranslated = all_links[1]
    >>> print(extract_text(untranslated))
    15
    >>> untranslated_link = extract_link_from_tag(untranslated, base_href)
    >>> browser.open(untranslated_link)
    >>> browser.url  # noqa
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=untranslated'
    >>> print(browser.getControl(name='show', index=1).value)
    ['untranslated']

Similarly, the number of unreviewed entries points to the translation page
with the 'with new suggestions' filter selected.

    >>> unreviewed = all_links[2]
    >>> print(extract_text(unreviewed))
    1
    >>> unreviewed_link = extract_link_from_tag(unreviewed, base_href)
    >>> browser.open(unreviewed_link)
    >>> browser.url  # noqa
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=new_suggestions'
    >>> print(browser.getControl(name='show', index=1).value)
    ['new_suggestions']

The number of updated entries points to the translation page with the
'changed in Ubuntu' filter selected.

    >>> updated = all_links[3]
    >>> print(extract_text(updated))
    1
    >>> updated_link = extract_link_from_tag(updated, base_href)
    >>> browser.open(updated_link)
    >>> browser.url  # noqa
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=changed_in_ubuntu'
    >>> print(browser.getControl(name='show', index=1).value)
    ['changed_in_ubuntu']

==========================
Legend and headers display
==========================

On template overview page, when user is not logged in (and there is no
sufficient GeoIP data), or user has not set their preferred languages,
legend should be hidden from them since he's looking only at the list
of templates.

We are pretending to be coming from 255.255.255.255 so no GeoIP data
will match (otherwise, we'll get a couple of African languages as
preferred languages, and we are testing behaviour when no languages are
wanted other than those an app is translated to).  255.255.255.255 is just
a random choice of an IP address for which we hold no GeoIP mappings.

    >>> anon_browser.addHeader('X-Forwarded-For', '255.255.255.255')
    >>> anon_browser.open(
    ...     'http://translations.launchpad.test/evolution/trunk/'
    ...     '+translations')
    >>> find_tag_by_id(anon_browser.contents, 'legend') is None
    False

When looking at a specific template with at least one translation, they
will again see the legend.

    >>> anon_browser.open(
    ...    'http://translations.launchpad.test/evolution/trunk/+pots/'
    ...    'evolution-2.2')
    >>> find_tag_by_id(anon_browser.contents, 'legend') is None
    False

The same happens for template overview page for packages.

    >>> anon_browser.open(
    ...    'http://translations.launchpad.test/ubuntu/hoary/+source/'
    ...    'evolution/+translations')
    >>> find_tag_by_id(anon_browser.contents, 'legend') is None
    True

And with at least one translation, legend is shown.

    >>> anon_browser.open(
    ...    'http://translations.launchpad.test/ubuntu/hoary/+source/'
    ...    'evolution/+pots/man')
    >>> find_tag_by_id(anon_browser.contents, 'legend') is None
    False

When there are no translations in a single template, legend and
headers will not be shown.

    # To check this, we need to state that this project uses Launchpad for
    # translations.
    >>> admin_browser.open(
    ...   'http://launchpad.test/netapplet/+configure-translations')
    >>> admin_browser.getControl('Launchpad').click()
    >>> admin_browser.getControl('Change').click()
    >>> anon_browser.open(
    ...     'http://translations.launchpad.test/netapplet/trunk/+pots/'
    ...     'netapplet')
    >>> find_tag_by_id(anon_browser.contents, 'legend') is None
    True

And likewise for PO template pages for templates without translations
in packages:

    >>> anon_browser.open(
    ...    'http://translations.launchpad.test/ubuntu/hoary/+source/pmount/'
    ...    '+pots/man')
    >>> find_tag_by_id(anon_browser.contents, 'legend') is None
    True


The PO Template Views
=====================

Carlos is a translator who translates things into Spanish and Catalan.
When he looks at available translations for Evolution in Hoary, he
should see Catalan in the list.

    >>> browser = setupBrowser(auth='Basic carlos@canonical.com:test')
    >>> browser.open(
    ...     'http://translations.launchpad.test/ubuntu/hoary/+source/'
    ...     'evolution/+translations')
    >>> six.ensure_str('Catalan') in browser.contents
    True

But also, he doesn't want to see other languages in the list.  So, he
shouldn't see eg. Japanese.

    >>> six.ensure_str('Japanese') in browser.contents
    False

Next, if he chooses to view all the languages, he should see Japanese
among the languages on the page.

    >>> browser.getLink('View template & all languages...').click()
    >>> six.ensure_str('Japanese') in browser.contents
    True

So, everything is fine, and Carlos can sleep calmly.

Links to filtered pages
=======================

The POTemplate overview page shows different statistics: a count of
untranslated messages, messages with new, unreviewed suggestions, and
a count of messages which had their imported translations changed in
Ubuntu.

Looking at the POTemplate overview page, we can see that there are
15 untranslated, 1 unreviewed and 1 changed in Ubuntu Spanish translations
(all numbers repeated as hidden 'sortkey' values).

    >>> browser.open('http://translations.launchpad.test/ubuntu/hoary/'+
    ...              '+source/evolution/+pots/evolution-2.2')
    >>> spanish_line = find_tag_by_id(browser.contents, 'evolution-2.2_es')
    >>> print(extract_text(spanish_line))
    Spanish
    15 1 1
    ...

Language title points to the general translate page:

    # We are not using browser.getLink because there is no unique way to
    # get all of the relevant links, and we don't want to pollute the
    # page template with too many IDs useful only for testing.
    >>> all_links = spanish_line.find_all('a')
    >>> base_href = browser.url
    >>> unfiltered = all_links[0]
    >>> print(extract_text(unfiltered))
    Spanish
    >>> print(extract_link_from_tag(unfiltered, base_href))  # noqa
    http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate

The number of untranslated entries points to the same page, which now shows
only untranslated items. When we follow this link, the filtering combo box has
the right filter preselected.

    >>> untranslated = all_links[1]
    >>> print(extract_text(untranslated))
    15
    >>> untranslated_link = extract_link_from_tag(untranslated, base_href)
    >>> browser.open(untranslated_link)
    >>> browser.url  # noqa
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=untranslated'
    >>> print(browser.getControl(name='show', index=2).value)
    untranslated

Similarly, the number of unreviewed entries points to the translation page
with the 'with new suggestions' filter selected.

    >>> unreviewed = all_links[2]
    >>> print(extract_text(unreviewed))
    1
    >>> unreviewed_link = extract_link_from_tag(unreviewed, base_href)
    >>> browser.open(unreviewed_link)
    >>> browser.url  # noqa
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=new_suggestions'
    >>> print(browser.getControl(name='show', index=2).value)
    new_suggestions

The number of updated entries points to the translation page with the
'changed in Ubuntu' filter selected.

    >>> updated = all_links[3]
    >>> print(extract_text(updated))
    1
    >>> updated_link = extract_link_from_tag(updated, base_href)
    >>> browser.open(updated_link)
    >>> browser.url  # noqa
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=changed_in_ubuntu'
    >>> print(browser.getControl(name='show', index=2).value)
    changed_in_ubuntu
