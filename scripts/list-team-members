#!/usr/bin/python2 -S
#
# Copyright 2009 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

__metaclass__ = type

import _pythonpath  # noqa: F401

import logging
import sys

import six

from lp.registry.scripts.listteammembers import (
    NoSuchTeamError,
    process_team,
    )
from lp.services.scripts.base import (
    LaunchpadScript,
    LaunchpadScriptFailure,
    )


class ListTeamMembersScript(LaunchpadScript):

    description = "Create a list of members of a team."
    usage = "usage: %s [-e|--email-only|-f|--full-details|-s|--ssh-keys] " \
        "team-name [team-name-2] .. [team-name-n]" % sys.argv[0]
    loglevel = logging.INFO

    def add_my_options(self):
        self.parser.set_defaults(format='simple')
        self.parser.add_option(
            '-e', '--email-only', action='store_const', const='email',
            help='Only print email addresses', dest='format')
        self.parser.add_option(
            '-f', '--full-details', action='store_const', const='full',
            help='Print full details', dest='format')
        self.parser.add_option(
            '-s', '--ssh-keys', action='store_const', const='sshkeys',
            help='Print sshkeys', dest='format')

    def main(self):

        display_option = self.options.format
        teamnames = self.args

        if not teamnames:
            self.parser.error('No team specified')

        # We don't want duplicates, so use a set to enforce uniqueness.
        member_details = set()
        for teamname in teamnames:
            try:
                member_details.update(process_team(teamname, display_option))
            except NoSuchTeamError:
                raise LaunchpadScriptFailure("No such team: %s" % teamname)
        for detail in sorted(member_details):
            print(six.ensure_str(detail))


if __name__ == '__main__':
    script = ListTeamMembersScript(
        'lp.services.scripts.listteammembers', dbuser='listteammembers')
    script.run()
