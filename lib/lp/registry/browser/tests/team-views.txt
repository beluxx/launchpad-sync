Team pages
==========

Home page
---------

    >>> from zope.component import getMultiAdapter
    >>> from lp.registry.interfaces.person import IPersonSet
    >>> from lp.registry.interfaces.teammembership import ITeamMembershipSet
    >>> person_set = getUtility(IPersonSet)

On a team home page, we show up to the latest five members who were approved
as well as the up to five latest members who proposed themselves.

    >>> ubuntu_team = person_set.getByName('name18')
    >>> team_home = create_initialized_view(ubuntu_team, '+index')
    >>> membershipset = getUtility(ITeamMembershipSet)
    >>> for member in team_home.recently_approved_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print("%s: %s" % (member.name, membership.status.title))
    name20: Approved
    spiv: Approved
    limi: Approved

    >>> for member in team_home.recently_proposed_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print("%s: %s" % (member.name, membership.status.title))
    justdave: Proposed

If new members are added/proposed, they'll show up at the top of the lists.

    >>> sample_person = person_set.getByName('name12')
    >>> ignored = login_person(sample_person)
    >>> sample_person.join(ubuntu_team)
    >>> salgado = person_set.getByName('salgado')
    >>> mark = person_set.getByName('mark')
    >>> login('foo.bar@canonical.com')
    >>> ignored = ubuntu_team.addMember(salgado, reviewer=mark)

    >>> team_home = create_initialized_view(ubuntu_team, '+index')
    >>> for member in team_home.recently_approved_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print("%s: %s" % (member.name, membership.status.title))
    salgado: Approved
    name20: Approved
    spiv: Approved
    limi: Approved

    >>> for member in team_home.recently_proposed_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print("%s: %s" % (member.name, membership.status.title))
    name12: Proposed
    justdave: Proposed

Posting malformed data to the team home page raises an error.

    >>> from lp.services.webapp.servers import LaunchpadTestRequest
    >>> broken_request = LaunchpadTestRequest(
    ...     form={})
    >>> broken_request.method = 'POST'
    >>> team_home = getMultiAdapter(
    ...     (ubuntu_team, broken_request), name='+index')
    >>> team_home.initialize()
    Traceback (most recent call last):
    ...
    lp.app.errors.UnexpectedFormData:
    The mailing list form did not receive the expected form fields.


Contacting the team
-------------------

Logged in users can contact any other Launchpad user through a 'Contact this
user' feature (see person-pages.txt).  Similarly, a logged in user can contact
a team through a 'Contact this team' link.

The team's overview page tells us that we're contacting a team instead of a
user. The title of the link states that the team owner will be contacted
because bart is not a member of the team.

    >>> guadamen = person_set.getByName('guadamen')
    >>> bart = factory.makePerson(email='bart@example.com', name='bart')
    >>> ignored = login_person(bart)

    >>> view = create_initialized_view(guadamen, '+index')
    >>> print(view.contact_link_title)
    Send an email to this team's admins through Launchpad
    >>> print(view.specific_contact_text)
    Contact this team's admins


Mugshots
--------

The mugshots for all members of a team can be seen on the +mugshots
page.  The display of mugshots is batched.

    >>> ubuntu = person_set.getByName('ubuntu-team')
    >>> view = create_initialized_view(ubuntu, '+mugshots')
    >>> batch = view.members.currentBatch()
    >>> print(len(list(ubuntu.allmembers)))
    10
    >>> print(view.batch_size)
    8
    >>> print(len(list(batch)))
    8
    >>> from zope.security.proxy import removeSecurityProxy
    >>> for person in list(batch):
    ...     print(removeSecurityProxy(person))
    <Person at ... limi (Alexander Limi)>
    <Person at ... cprov (Celso Providelo)>
    <Person at ... kamion (Colin Watson)>
    <Person at ... kinnison (Daniel Silverstone)>
    <Person at ... edgar (Edgar Bursic)>
    <Person at ... name16 (Foo Bar)>
    <Person at ... jdub (Jeff Waugh)>
    <Person at ... mark (Mark Shuttleworth)>


Privacy and visibility
----------------------

Team visibility is used on the page to indicate privacy.  GuadaMen is a public
team.

    >>> view = create_initialized_view(guadamen, '+index')
    >>> print(view.visibility_info)
    Public team
    >>> print(view.visibility_portlet_class)
    portlet

Private teams are indicated as private.

    >>> from lp.registry.interfaces.person import PersonVisibility
    >>> login('admin@canonical.com')
    >>> private_team = factory.makeTeam(
    ...     owner=sample_person,
    ...     name='private-team', displayname='Private Team',
    ...     visibility=PersonVisibility.PRIVATE)

    >>> view = create_initialized_view(private_team, '+index')
    >>> print(view.visibility_info)
    Private team
    >>> print(view.visibility_portlet_class)
    portlet private

+add-my-teams
-------------

This page lists the teams that you administer and can add as a member
to the current team.

    >>> ignored = login_person(sample_person)
    >>> view = create_initialized_view(guadamen, '+add-my-teams')
    >>> for candidate in view.candidate_teams:
    ...     print(candidate.name, candidate.visibility.title)
    landscape-developers Public
    launchpad-users Public
    private-team Private
