Bug commenting and attaching files is done on the same form.

When a comment is submitted, the attachment is optional. Accessing the
comment form requires launchpad.Edit permission on the bugtask. In this
case, it means being logged in.

    >>> anon_browser.open(
    ...     "http://bugs.launchpad.test/firefox/+bug/1/+addcomment-form")
    Traceback (most recent call last):
      ..
    zope.security.interfaces.Unauthorized: ...launchpad.Edit...

So let's login and add a comment.

    >>> user_browser.open(
    ...     "http://bugs.launchpad.test/firefox/+bug/1/+addcomment-form")
    >>> user_browser.getControl(name='field.comment').value = "a test comment"
    >>> user_browser.getControl("Post Comment").click()

    >>> print(user_browser.url)
    http://bugs.launchpad.test/firefox/+bug/1

    >>> print_feedback_messages(user_browser.contents)
    Thank you for your comment.

When an attachment is submitted, the comment and description are optional.

    >>> from io import BytesIO

    >>> user_browser.open(
    ...     "http://bugs.launchpad.test/firefox/+bug/1/+addcomment-form")
    >>> user_browser.getControl("Attachment").add_file(
    ...     BytesIO(b"a test file"), "text/plain", "foo.txt")
    >>> user_browser.getControl("Post Comment").click()

    >>> print_feedback_messages(user_browser.contents)
    Attachment foo.txt added to bug.

A comment and attachment can be submitted in one request.

    >>> user_browser.open(
    ...     "http://bugs.launchpad.test/firefox/+bug/1/+addcomment-form")
    >>> user_browser.getControl(
    ...     name='field.comment').value = "this is a comment"
    >>> user_browser.getControl("Attachment").add_file(
    ...     BytesIO(b"some file"), "text/plain", "bar.txt")
    >>> user_browser.getControl("Description").value = "some file"
    >>> user_browser.getControl("Post Comment").click()

    >>> print(user_browser.url)
    http://bugs.launchpad.test/firefox/+bug/1

    >>> print_feedback_messages(user_browser.contents)
    Thank you for your comment.
    Attachment bar.txt added to bug.

You cannot upload an empty attachment.

    >>> user_browser.open(
    ...     "http://bugs.launchpad.test/firefox/+bug/1/+addcomment-form")
    >>> user_browser.getControl("Attachment").add_file(
    ...     BytesIO(b""), "text/plain", "foo.txt")
    >>> user_browser.getControl("Post Comment").click()

    >>> print(user_browser.url)
    http://bugs.launchpad.test/firefox/+bug/1/+addcomment

    >>> print_feedback_messages(user_browser.contents)
    There is 1 error.
    Cannot upload empty file.

The size of uploaded files is limited with the max_attachment_size
option in launchpad-lazr.conf. In our example, the size is limited to 1024.

    >>> from lp.services.config import config

    >>> print(config.launchpad.max_attachment_size)
    1024

    >>> user_browser.open(
    ...     "http://bugs.launchpad.test/firefox/+bug/1/+addcomment-form")
    >>> user_browser.getControl("Attachment").add_file(
    ...     BytesIO(b"x" * 1025), "text/plain", "foo.txt")
    >>> user_browser.getControl("Post Comment").click()

    >>> print_feedback_messages(user_browser.contents)
    There is 1 error.
    Cannot upload files larger than 1024 bytes

The comment/attach file form is available from a link on the bug page.

    >>> user_browser.open(
    ...     "http://bugs.launchpad.test/firefox/+bug/1/+addcomment")
    >>> user_browser.getControl("Attachment").add_file(
    ...     BytesIO(b"a test file"), "text/plain", "foo.txt")
    >>> user_browser.getControl("Description").value = "some file"
    >>> user_browser.getControl("Post Comment").click()

    >>> print(user_browser.url)
    http://bugs.launchpad.test/firefox/+bug/1

    >>> print_feedback_messages(user_browser.contents)
    Attachment foo.txt added to bug.
