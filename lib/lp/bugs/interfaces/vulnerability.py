# Copyright 2022 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

"""Vulnerability interfaces."""

__all__ = [
    'IVulnerability',
    'IVulnerabilityActivity',
    'IVulnerabilityActivitySet',
    'IVulnerabilitySet',
    'VulnerabilityChange',
    'VulnerabilityStatus'
    ]

from lazr.enum import (
    DBEnumeratedType,
    DBItem,
    )
from lazr.restful.fields import Reference
from zope.interface import Interface
from zope.schema import (
    Choice,
    Datetime,
    Int,
    TextLine,
    )

from lp import _
from lp.app.enums import InformationType
from lp.app.interfaces.informationtype import IInformationType
from lp.bugs.interfaces.bugtask import BugTaskImportance
from lp.bugs.interfaces.cve import ICve
from lp.registry.interfaces.distribution import IDistribution
from lp.registry.interfaces.person import IPerson


class VulnerabilityChange(DBEnumeratedType):
    """Type of change in vulnerability

    We use this enum to track changes occurring in
    data stored in the vulnerability table.
    """

    STATUS = DBItem(0, """
        Status

        The status of the vulnerability changed.
        """)

    DESCRIPTION = DBItem(1, """
        Description

        The description of the vulnerability changed.
        """)

    NOTES = DBItem(2, """
        Notes

        The notes on the vulnerability changed.
        """)

    MITIGATION = DBItem(3, """
        Mitigation

        Mitigation for this vulnerability changed.
        """)

    IMPORTANCE = DBItem(4, """
        Importance

        The importance assigned for this vulnerability changed.
        """)

    IMPORTANCE_EXPLANATION = DBItem(5, """
        Importance explanation

        The importance explanation changed for this vulnerability.
        """)

    PRIVACY = DBItem(6, """
        Privacy

        The privacy for this vulnerability changed.
        """)


class VulnerabilityStatus(DBEnumeratedType):
    """Vulnerability status"""

    NEEDS_TRIAGE = DBItem(0, """
        Needs triage

        Not looked at yet.
        """)

    ACTIVE = DBItem(1, """
        Active

        The vulnerability is active.
        """)

    IGNORED = DBItem(2, """
        Ignored

        The vulnerability is currently ignored.
        """)

    RETIRED = DBItem(3, """
        Retired

        This vulnerability is now retired.
        """)


class IVulnerabilityView(Interface):
    """`IVulnerability` attributes that require launchpad.View."""

    id = Int(title=_("ID"), required=True, readonly=True)

    distribution = Reference(IDistribution, title=_("Distribution"),
                             required=True, readonly=True)

    cve = Reference(ICve, title=_('External CVE reference corresponding'
                                  ' to this vulnerability, if any.'),
                    required=False, readonly=True)

    date_created = Datetime(
        title=_("The date this vulnerability was made public."),
        required=True, readonly=True)

    creator = Reference(
        title=_('Person'), schema=IPerson, required=True, readonly=True)


class IVulnerabilityEditableAttributes(Interface):
    """`IVulnerability` attributes that can be edited.

    These attributes need launchpad.View to see, and launchpad.Edit to change.
    """

    status = Choice(
        title=_('Result of the report'),  readonly=True,
        required=True, vocabulary=VulnerabilityStatus)

    description = TextLine(
        title=_("A short description of the vulnerability."), required=False,
        readonly=False)

    notes = TextLine(
        title=_("Free-form notes for this vulnerability."), required=False,
        readonly=False)

    mitigation = TextLine(
        title=_("Explains why we're ignoring a vulnerability."),
        required=False, readonly=False)

    importance = Choice(title=_('Importance used to indicate work priority,'
                                ' not severity'),
                        vocabulary=BugTaskImportance, required=True,
                        default=BugTaskImportance.UNDECIDED, readonly=True)

    importance_explanation = TextLine(
        title=_("Used to explain why our importance differs "
                "from somebody else's CVSS score."),
        required=False, readonly=False)

    information_type = Choice(
        title=_("Information type"), vocabulary=InformationType,
        required=True, readonly=False, default=InformationType.PUBLIC,
        description=_(
            "Indicates privacy of the vulnerability."))

    date_made_public = Datetime(
        title=_("The date this vulnerability was made public."),
        required=False, readonly=False)


class IVulnerabilityEdit(Interface):
    """`IVulnerability` attributes that require launchpad.Edit."""


class IVulnerability(IVulnerabilityView,
                     IVulnerabilityEditableAttributes,
                     IVulnerabilityEdit, IInformationType):
    """Contract describing a vulnerability."""


class IVulnerabilitySet(Interface):
    """The set of all vulnerabilities."""

    def new(distribution, status, importance,
            creator, information_type=InformationType.PUBLIC, cve=None,
            description=None, notes=None, mitigation=None,
            importance_explanation=None, date_made_public=None):
        """Return a new vulnerability.

        :param distribution: The distribution for the vulnerability.
        :param status: The status of the vulnerability.
        :param importance: Indicates work priority, not severity.
        :param creator: The user that created the vulnerability.
        :param information_type: The privacy of the vulnerability.
        :param cve: A `Cve` for which the vulnerability is being created.
        :param description: The description of the vulnerability.
        :param notes: The notes for the vulnerability.
        :param mitigation: A short summary of the result.
        :param importance_explanation: Used to explain why our importance
         differs from somebody else's CVSS score.
        :param date_made_public: The date this vulnerability was made public.
        """


class IVulnerabilityActivity(Interface):
    """`IVulnerabilityActivity` attributes that require launchpad.View."""

    id = Int(title=_("ID"), required=True, readonly=True)

    vulnerability = Reference(IVulnerability, title=_('Vulnerability'),
                              required=True, readonly=True)

    date_changed = Datetime(
        title=_("When activity last changed for this vulnerability."),
        required=True, readonly=True)

    changer = Reference(IPerson, title=_("Changer"), required=True,
                        readonly=True,
                        description=_("The person that made the changes."))

    what_changed = Choice(
        title=_('Indicates what field changed for the vulnerability.'),
        readonly=True,
        required=True, vocabulary=VulnerabilityChange)

    old_value = TextLine(
        title=_("Indicates the value prior to the change."), required=False,
        readonly=True)

    new_value = TextLine(
        title=_("Indicates the current value."), required=False,
        readonly=True)


class IVulnerabilityActivitySet(Interface):
    """The set of all activities for a certain vulnerability."""

    def new(vulnerability, changer, what_changed=None,
            old_value=None, new_value=None):
        """Return a new vulnerability activity.

        :param vulnerability: The vulnerability for this activity.
        :param changer: The `Person` that performed the activity.
        :param what_changed: The 'VulnerabilityChange' that occurred
         for this vulnerability.
        :param old_value: Indicates the value prior to the change.
        :param new_value: Indicates the current value.
        """
