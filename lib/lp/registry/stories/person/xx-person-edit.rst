Changing personal details
=========================

A user wants to check if their personal information is up to date in
Launchpad.

    >>> from lp.testing.sampledata import ADMIN_EMAIL
    >>> login(ADMIN_EMAIL)
    >>> user = factory.makePerson(name='ray', displayname='Ray Ray',
    ...                           email='ray@example.com')
    >>> logout()
    >>> browser.addHeader('Authorization', 'Basic ray@example.com:test')
    >>> browser.open('http://launchpad.test/~ray')
    >>> browser.getLink('Change details').click()
    >>> browser.getControl('Display Name').value
    'Ray Ray'
    >>> browser.getControl('Name', index=1).value
    'ray'
    >>> browser.getControl(
    ...     'Hide my email addresses from other Launchpad users').selected
    False

They can see a link to an FAQ that explains launchpad accounts and passwords.
Note that this is a link to an FAQ in production databases.

    >>> print(browser.getLink(
    ...     'Learn about your Launchpad account and password').url)
    http://launchpad.test/launchpad/+faq/51

They noticed that their information is out of date and will update it.
(If they leave leading or trailing whitespace in the displayname it'll
be stripped)

    >>> browser.getControl('Name', index=1).value = 'rayjay'
    >>> browser.getControl('Display Name').value = '   Mr Ray Jay '
    >>> browser.getControl(
    ...     'Hide my email addresses from other Launchpad users').click()
    >>> browser.getControl('Save').click()

Hit Save again to accept the OpenID warning.

    >>> browser.getControl('Save').click()

    >>> browser.url
    'http://launchpad.test/~rayjay'
    >>> ('The changes to your personal details have been saved.'
    ...  in browser.contents)
    True

Now we check to make sure the displayname was changed and stripped.

    >>> browser.open('http://launchpad.test/~rayjay/+edit')
    >>> browser.getControl('Display Name').value
    'Mr Ray Jay'

And the email addresses are not shown on Foo Bar's home page to any random
user.

    >>> user_browser.open('http://launchpad.test/~rayjay')
    >>> 'ray@example.com' in user_browser.contents
    False

They will decide to make all bug notifications that are sent to them
not include descriptions.

    >>> bug_description_control = browser.getControl(
    ...     "Include bug descriptions when sending me bug notifications")
    >>> bug_description_control.selected
    True
    >>> bug_description_control.click()

They will also decide to not receive bug notifications generated by their
own actions.

    >>> self_generated_control = browser.getControl(
    ...     "Send me bug notifications for changes I make")
    >>> self_generated_control.selected
    False
    >>> self_generated_control.click()

They will enable expanded mail notification footers.

    >>> expanded_footer_control = browser.getControl(
    ...     "Include filtering information in email footers")
    >>> expanded_footer_control.selected
    False
    >>> expanded_footer_control.click()

    >>> browser.getControl('Save').click()
    >>> browser.url
    'http://launchpad.test/~rayjay'

We now check to ensure that the various notifications options were changed:

    >>> browser.open('http://launchpad.test/~rayjay/+edit')
    >>> browser.getControl("Include bug descriptions when sending me "
    ...     "bug notifications").selected
    False
    >>> browser.getControl(
    ...     "Send me bug notifications for changes I make").selected
    True
    >>> browser.getControl(
    ...     "Include filtering information in email footers").selected
    True
