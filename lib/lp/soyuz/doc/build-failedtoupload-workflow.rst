Build FAILEDTOUPLOAD workflow
=============================

A FAILEDTOUPLOAD build record represents a build procedure that
resulted in a binary upload, already gathered in the production
machine disk, that could not be successfully uploaded to Launchpad.

It can be caused by several reasons, inconsistencies generated by the
builders or code failures in upload system.

In all of these cases we want the 'buildd-admins' to be aware of the
failure and provide them all the information required to debug the failure.

FAILEDTOUPLOAD email notification
---------------------------------

Once a build result is recognised as FAILEDTOUPLOAD by the
buildmaster/worker-scanner code, an build notification will be issued.
See more information in build-notification.txt file.

    >>> from lp.soyuz.interfaces.binarypackagebuild import (
    ...     IBinaryPackageBuildSet,
    ... )
    >>> from lp.testing.mail_helpers import pop_notifications
    >>> buildset = getUtility(IBinaryPackageBuildSet)

Let's use a sampledata build record in FAILEDTOUPLOAD:

    >>> failedtoupload_candidate = buildset.getByID(22)

    >>> print(failedtoupload_candidate.title)
    i386 build of cdrkit 1.0 in ubuntu breezy-autotest RELEASE

    >>> print(failedtoupload_candidate.status.name)
    FAILEDTOUPLOAD

    >>> print(failedtoupload_candidate.upload_log.filename)
    upload_22_log.txt

FAILEDTOUPLOAD notification requires 'extra_info' argument to be filled:

    >>> failedtoupload_candidate.notify()
    Traceback (most recent call last):
    ...
    AssertionError: Extra information is required for FAILEDTOUPLOAD
    notifications.

Normally 'extra_info' will contain the output generated by the binary
upload procedure with instructions to reprocess it:

    >>> failedtoupload_candidate.notify(extra_info="ANY OUTPUT")

    >>> notifications = pop_notifications()
    >>> len(notifications)
    3

As for the other failure notifications we will send emails for the
'lp-buildd-admins' team members (celso.providelo & foo.bar) and for
source creator (mark) as specified in the test configuration:

    >>> from lp.services.config import config
    >>> config.builddmaster.notify_owner
    True


    >>> for build_notification in notifications:
    ...     build_notification["To"]
    ...
    'Celso Providelo <celso.providelo@canonical.com>'
    'Foo Bar <foo.bar@canonical.com>'
    'Mark Shuttleworth <mark@example.com>'

Note that the generated notification contain the 'extra_info' content:

    >>> build_notification = notifications[0]

    >>> build_notification["Subject"]
    '[Build #22] i386 build of cdrkit 1.0 in ubuntu breezy-autotest RELEASE'

    >>> build_notification["X-Launchpad-Build-State"]
    'FAILEDTOUPLOAD'

    >>> build_notification["X-Creator-Recipient"]
    'mark@example.com'

    >>> notification_body = build_notification.get_payload(
    ...     decode=True
    ... ).decode()
    >>> print(notification_body)  # noqa  # doctest: -NORMALIZE_WHITESPACE
    <BLANKLINE>
     * Source Package: cdrkit
     * Version: 1.0
     * Architecture: i386
     * Archive: ubuntu
     * Component: main
     * State: Failed to upload
     * Duration: 1 minute
     * Build Log: http://launchpad.test/ubuntu/+source/cdrkit/1.0/+build/22/+files/netapplet-1.0.0.tar.gz
     * Builder: http://launchpad.test/builders/bob
     * Source: http://launchpad.test/ubuntu/+source/cdrkit/1.0
    <BLANKLINE>
    Upload log:
    ANY OUTPUT
    <BLANKLINE>
    If you want further information about this situation, feel free to
    contact us by asking a question on Launchpad
    (https://answers.launchpad.net/launchpad/+addquestion).
    <BLANKLINE>
    -- 
    i386 build of cdrkit 1.0 in ubuntu breezy-autotest RELEASE
    http://launchpad.test/ubuntu/+source/cdrkit/1.0/+build/22
    <BLANKLINE>
    You are receiving this email because you are a buildd administrator.
    <BLANKLINE>

The other notifications are similar except for the footer.

    >>> print(notifications[1].get_payload())
    <BLANKLINE>
    ...
    You are receiving this email because you are a buildd administrator.
    <BLANKLINE>
    >>> print(notifications[2].get_payload())
    <BLANKLINE>
    ...
    You are receiving this email because you created this version of this
    package.
    <BLANKLINE>
