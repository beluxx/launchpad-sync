<!-- Copyright 2009-2016 Canonical Ltd.  This software is licensed under the
     GNU Affero General Public License version 3 (see the file LICENSE).
-->

<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:lp="http://namespaces.canonical.com/lp"
    xmlns:webservice="http://namespaces.canonical.com/webservice"
    xmlns:xmlrpc="http://namespaces.zope.org/xmlrpc"
    i18n_domain="launchpad">

    <lp:authorizations module=".security" />
    <!-- ArchiveGPGSigningKey -->
    <class class="lp.archivepublisher.archivegpgsigningkey.ArchiveGPGSigningKey">
        <allow interface="lp.archivepublisher.interfaces.archivegpgsigningkey.IArchiveGPGSigningKey"/>
    </class>

    <adapter
        for="lp.soyuz.interfaces.archive.IArchive"
        provides="lp.archivepublisher.interfaces.archivegpgsigningkey.IArchiveGPGSigningKey"
        factory="lp.archivepublisher.archivegpgsigningkey.ArchiveGPGSigningKey"
        />

    <!-- PublisherConfig -->
    <lp:securedutility
        class="lp.archivepublisher.model.publisherconfig.PublisherConfigSet"
        provides="lp.archivepublisher.interfaces.publisherconfig.IPublisherConfigSet">
        <allow
            interface="lp.archivepublisher.interfaces.publisherconfig.IPublisherConfigSet"/>
    </lp:securedutility>

    <class
        class="lp.archivepublisher.model.publisherconfig.PublisherConfig">
        <require
            permission="launchpad.Admin"
            interface="lp.archivepublisher.interfaces.publisherconfig.IPublisherConfig"
            set_schema="lp.archivepublisher.interfaces.publisherconfig.IPublisherConfig"/>
    </class>

    <!-- Custom upload handlers

         This is a marker as per the comment in lib/lp/soyuz/enums.py:
         ##CUSTOMFORMAT##
         If you change anything to do with custom formats, grep for the
         marker in the codebase and make sure the same changes are made
         everywhere which needs them.
    -->
    <lp:securedutility
        class="lp.archivepublisher.debian_installer.DebianInstallerUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="DEBIAN_INSTALLER">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>
    <lp:securedutility
        class="lp.archivepublisher.rosetta_translations.RosettaTranslationsUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="ROSETTA_TRANSLATIONS">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>
    <lp:securedutility
        class="lp.archivepublisher.dist_upgrader.DistUpgraderUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="DIST_UPGRADER">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>
    <lp:securedutility
        class="lp.archivepublisher.ddtp_tarball.DdtpTarballUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="DDTP_TARBALL">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>
    <lp:securedutility
        class="lp.archivepublisher.static_translations.StaticTranslationsUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="STATIC_TRANSLATIONS">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>
    <lp:securedutility
        class="lp.archivepublisher.meta_data.MetaDataUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="META_DATA">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>
    <lp:securedutility
        class="lp.archivepublisher.signing.UefiUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="UEFI">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>
    <lp:securedutility
        class="lp.archivepublisher.signing.SigningUpload"
        provides="lp.soyuz.interfaces.queue.ICustomUploadHandler"
        name="SIGNING">
        <allow
            interface="lp.soyuz.interfaces.queue.ICustomUploadHandler"/>
    </lp:securedutility>

</configure>
