Performance of +translate pages
-------------------------------

The +translate pages, where users can do their translations, involves some
heavy database activity including complex caching and prefetching of
translation suggestions.  It's hard to keep database performance for this page
under control.

    >>> from lp.testing import RequestTimelineCollector
    >>> query_counter = RequestTimelineCollector()
    >>> query_counter.register()

Anonymous access
................

When an unauthenticated (anonymous) visitor requests a translation page, the
number of queries issued is relatively low.  Mileage may vary, but consider
this test a tripwire for the number potentially getting out of hand.

    >>> anon_browser.open(
    ...     'http://translations.launchpad.test/ubuntu/hoary/+source/'
    ...     'evolution/+pots/evolution-2.2/es/+translate')
    >>> anon_browser.url
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate'
    >>> print(anon_browser.contents)
    <...
    >>> statement_count = query_counter.count
    >>> 0 < statement_count < 120
    True

Reviewing and translating
.........................

When an administrator logs in, the page shows not only translations and the
option to make suggestions, but existing suggestions as well.  It takes more
queries, but it still shouldn't run in the hundreds.

    >>> admin_browser.open(
    ...     'http://translations.launchpad.test/ubuntu/hoary/+source/'
    ...     'evolution/+pots/evolution-2.2/es/+translate')
    >>> admin_browser.url
    'http://translations.launchpad.test/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate'

XXX: JeroenVermeulen 2008-06-20 bug=241394: This has just started
failing in PQM.  May be something to do with the introduction of Storm.
Disable it for now.

    #>>> statement_count < query_counter.count < 150
    #True

Cleanup.

    >>> query_counter.unregister()
