# Copyright 2022 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

"""Vulnerability interfaces."""

__all__ = [
    'IVulnerability',
    'IVulnerabilitySet',
    'VulnerabilityStatus'
    ]

from lazr.enum import (
    DBEnumeratedType,
    DBItem,
    )
from zope.interface import (
    Interface,
    )
from zope.schema import (
    Bool,
    Choice,
    Int,
    TextLine,
    )
from lp import _
from lp.bugs.interfaces.bugtask import BugTaskImportance


class VulnerabilityChanges(DBEnumeratedType):
    """Type of change in vulnerability

    We use this enum to track changes occurring in
    data stored in the vulnerability table.
    """

    STATUS = DBItem(0, """
        Status

        The status of the vulnerability changed.
        """)

    DESCRIPTION = DBItem(1, """
        Description

        The description of the vulnerability changed.
        """)

    NOTES = DBItem(2, """
        Notes

        The notes on the vulnerability changed.
        """)

    MITIGATION = DBItem(3, """
        Mitigation

        Mitigation for this vulnerability changed.
        """)

    IMPORTANCE = DBItem(4, """
        Importance

        The importance assigned for this vulnerability changed.
        """)

    IMPORTANCE_EXPLANATION = DBItem(5, """
        Importance explanation

        The importance explanation changed for this vulnerability.
        """)

    PRIVACY = DBItem(6, """
        Privacy

        The privacy for this vulnerability changed.
        """)


class VulnerabilityStatus(DBEnumeratedType):
    """Vulnerability status""" 

    NEEDS_TRIAGE = DBItem(0, """
        Needs triage

        Not looked at yet.
        """)

    ACTIVE = DBItem(1, """
        Active

        The vulnerability is active.
        """)

    IGNORED = DBItem(2, """
        Ignored

        The vulnerability is currently ignored.
        """)

    RETIRED = DBItem(3, """
        Retired

        This vulnerability is now retired.
        """)


class IVulnerabilityView(Interface):
    """`IVulnerability` attributes that require launchpad.View."""

    id = Int(title=_("ID"), required=True, readonly=True)


class IVulnerabilityEditableAttributes(Interface):
    """`IVulnerability` attributes that can be edited.

    These attributes need launchpad.View to see, and launchpad.Edit to change.
    """

    status = Choice(
        title=_('Result of the report'),  readonly=True,
        required=False, vocabulary=VulnerabilityStatus)

    description = TextLine(
        title=_("A short description of the vulnerability."), required=False,
        readonly=False)

    notes = TextLine(
        title=_("Free-form notes for this vulnerability."), required=False,
        readonly=False)

    mitigation = TextLine(
        title=_("Explains why we're ignoring a vulnerability."), required=False,
        readonly=False)

    importance = Choice(title=_('Importance used to indicate work priority,'
                                ' not severity'),
                        vocabulary=BugTaskImportance,
                        default=BugTaskImportance.UNDECIDED, readonly=True)

    importance_explanation = TextLine(
        title=_("Used to explain why our importance differs "
                "from somebody else's CVSS score."),
        required=False, readonly=False)

    private = Bool(
        title=_("Indicates privacy of the vulnerability."), required=False,
        readonly=True, default=False)


class IVulnerabilityEdit(Interface):
    """`IVulnerability` attributes that require launchpad.Edit."""


class IVulnerability(IVulnerabilityView,
                     IVulnerabilityEditableAttributes,
                     IVulnerabilityEdit):
    """Contract describing a vulnerability."""


class IVulnerabilitySet(Interface):
    """The set of all vulnerabilities."""

    def new(distribution, cve, status, description,
            notes, mitigation, importance, importance_explanation,
            private):
        """Return a new vulnerability.

        :param distribution: The distribution for the vulnerability.
        :param cve: A `Cve` for which the vulnerability is being created.
        :param status: The status of the vulnerability.
        :param description: The description of the vulnerability.
        :param notes: The notes for the vulnerability.
        :param mitigation: A short summary of the result.
        :param importance: Indicates work priority, not severity.
        :param importance_explanation: Used to explain why our importance
         differs from somebody else''s CVSS score.
        :param private: The privacy of the vulnerability.
        """

    def getByID(id):
        """Returns the IVulnerability for a given ID."""
