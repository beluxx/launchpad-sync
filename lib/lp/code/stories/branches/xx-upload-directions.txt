Directions to upload to branches
================================

The branch ~name12/gnome-terminal/pushed is an upload branch. Its index page
shows contextual directions on how to upload to it.

    >>> branch_page = (
    ...     'http://code.launchpad.test/~name12/+branch/gnome-terminal/pushed')

We will need multiple browsers, logged in with different users. Set them up
now.

    >>> from zope.component import getUtility
    >>> from lp.registry.interfaces.person import IPersonSet
    >>> from lp.testing.pages import setupBrowserFreshLogin
    >>> login(ANONYMOUS)
    >>> name12 = getUtility(IPersonSet).getByEmail('test@canonical.com')
    >>> logout()
    >>> name12_browser = setupBrowserFreshLogin(name12)
    >>> ddaa_browser = setupBrowser(
    ...     auth='Basic david.allouche@canonical.com:test')

We will also need a ssh key. Save it now.

    >>> some_sshkey = (
    ...     'ssh-dss AAAAB3NzaC1kc3MAAAEBAPfhCA15ZaT08brwVXwpJjcZT6QFIipzF1'
    ...     'sGy57HY7QPi/W+uljr1VcCHzWdlSmda7YpTCTx0NFYYQIccQRGX6zYL8v1w9FS'
    ...     'RCAnxxUJmqEhsUDFYFdVTa9uLCrs3MSbmh7wwFPdRrGrO6X5x7T4dMZQwykSZr'
    ...     'OVdpLcCHRgrMZslLomIAjERn6OAQNiGFz7B2tEi/3Soqd52bGJwOtGymRiAXkP'
    ...     'SLbH7KfzSCe34ytdh6BD+4SrgSoa+TL3VDV70QAdlOFXD42ZHl3Sc0Tde4LbZe'
    ...     'Yq2Uf84DOATLZBbOYpRSqTLkM9XngpnvCRVb6dxEQfgODDw783tEuPpySLj2EA'
    ...     'AAAVANpUVgivDjt9gFibN/AXfYy1meeBAAABAB6FtnMywmWZg2lr2I3nDfE5U5'
    ...     'QbGUQB/ZEP98ZkSkhOcF29VlnGOxyb2/VZbVTLa/btlPF82L4An/c8VKtKZnel'
    ...     '7LnAlMoArdgzQNXGVQQVtnaWwM26ydgDzkSSIes3elNZgsfnPRBvaF0ol9Tqju'
    ...     '0rNGKjnr3ZOX/NX+42bxpjRnxYj1h56yP2jKKeGfjorI6JK1YfqBAiTxzaDMzS'
    ...     'pknnrbztaKJoh7IFqMMOp9ANSFh7H106pEaCv3ebCTJZprtWqNKjb2zum7OQPR'
    ...     'z3upA0qx22ocTokjv4itXJ6yj/BvGu9qdOIQFXuB2rsFtLZtS8ATueOly0Gzye'
    ...     'iZBx/AEAAAEBAO8jRYjL7tAYnVlO1p6UzPOicAuGCFWfNbBEDRAXoSgLNdj451'
    ...     'jStw+eUc9ZVz7tG/XRVZsiavtFHb2cbrcfX1YOd69xi0m+IY6mo3yKt3irQRok'
    ...     'Dtt376sHoUdHgj2ozySZJgG8IJndtoS+VQQy6NdClA3fNFb96bF865eNaRYoHJ'
    ...     'O9ZI84lkWQL++MLzIuyFfCs1hSlapyyuHC8kFmF7AQdrVZvbohSbnWs+w53nIW'
    ...     '8nAA7z21wAukvE1Pl6AQyG0e7U1sYS8Pc8dtmzJvdtVZWBl02/gqQJ7f06mFvn'
    ...     'sN45rR1Uyxnrwl6rbFwqabZDlyD5Ac6Icbvz9SG1gBOiI= andrew@trogdor')

Branch owned by a person
------------------------

Initially, the user is not logged in, the branch page points to the owner of
the branch, and suggest logging in for directions.

    >>> anon_browser.open(branch_page)
    >>> content = anon_browser.contents
    >>> instructions = find_tag_by_id(content, 'upload-directions')
    >>> print(instructions.decode_contents())
    Only
    <a href="http://launchpad.test/~name12">Sample Person</a>
    can upload to this branch. If you are Sample Person please
    <a href="+login">log in</a> for upload directions.

If the user is logged in, and is not the owner of the branch, we can be
definitive that it is not possible to upload to this branch.

    >>> ddaa_browser.open(branch_page)
    >>> content = ddaa_browser.contents
    >>> instructions = find_tag_by_id(content, 'upload-directions')
    >>> print(instructions.decode_contents())
    <div...
    You cannot upload to this branch. Only
    <a href="http://launchpad.test/~name12">Sample Person</a>
    can upload to this branch.
    ...

The user is the owner of the branch and logs in. The page gives the full upload
URL for the branch.

    >>> name12_browser.open(branch_page)
    >>> content = name12_browser.contents
    >>> instructions = find_tag_by_id(content, 'upload-directions')
    >>> print(extract_text(instructions))
    Update this branch:
    bzr push --use-existing-dir lp://dev/~name12/gnome-terminal/pushed


SSH key directions
------------------

If the user has the permission to upload to a branch, but does not have an SSH
key registered, point to the SSH keys form.

First, unregister the existing SSH key for Sample Person.

    >>> name12_browser.open(url='http://launchpad.test/~name12')
    >>> name12_browser.getLink(url='editsshkeys').click()
    >>> name12_browser.getControl('Remove').click()

The branch page now displays directions and a link to register an SSH key.

    >>> name12_browser.open(branch_page)
    >>> content = name12_browser.contents
    >>> instructions = find_tag_by_id(content, 'ssh-key-directions')
    >>> print(instructions.decode_contents())
    To authenticate with the Launchpad branch upload service, you need to
    <a href="http://launchpad.test/~name12/+editsshkeys">
    register an SSH key</a>.

Click the link and register a key.

    >>> name12_browser.getLink('register an SSH key').click()
    >>> name12_browser.getControl(name='sshkey').value = some_sshkey
    >>> name12_browser.getControl('Import Public Key').click()

The branch page should no longer display the SSH key directions.

    >>> name12_browser.open(branch_page)
    >>> content = name12_browser.contents
    >>> print(find_tag_by_id(content, 'ssh-key-directions'))
    None

If the user is not logged in, or does have the permission to upload to the
branch, the SSH key directions are not displayed. So they do not become part of
the perceptual "noise" of the page, and the user pays attention when they
appear.

    >>> anon_browser.open(branch_page)
    >>> content = anon_browser.contents
    >>> print(find_tag_by_id(content, 'ssh-key-directions'))
    None

    >>> ddaa_browser.open(branch_page)
    >>> content = ddaa_browser.contents
    >>> print(find_tag_by_id(content, 'ssh-key-directions'))
    None


Branch owned by a team
----------------------

When the branch is owned by a team, the directions need to be a bit different.
In particular, they should be adapted to refer to team "members", and should
help the user in joining the team. We will use the landscape-developers team,
which is owned by Sample Person.

Reassign the branch to the team.

    >>> name12_browser.open(branch_page)
    >>> name12_browser.getLink('Change branch details').click()
    >>> name12_browser.getControl('Owner').displayValue = [
    ...     'Landscape Developers']
    >>> name12_browser.getControl('Change Branch').click()

This changes the URL of the branch. Save the new URL.

    >>> branch_page = name12_browser.url

The upload directions for unauthenticated users are adapted to the fact the
owner is a team.

    >>> anon_browser.open(branch_page)
    >>> content = anon_browser.contents
    >>> instructions = find_tag_by_id(content, 'upload-directions')
    >>> print(instructions.decode_contents())
    Members of <a
    href="http://launchpad.test/~landscape-developers">Landscape
    Developers</a> can upload to this branch. <a href="+login">Log in</a> for
    directions.

If the user is authenticated and is not a member of the team, we provide
a link to the team.

    >>> ddaa_browser.open(branch_page)
    >>> content = ddaa_browser.contents
    >>> instructions = find_tag_by_id(content, 'upload-directions')
    >>> print(instructions.decode_contents())
    <div...
    You cannot upload to this branch. Members of <a
    href="http://launchpad.test/~landscape-developers">Landscape
    Developers</a> can upload to this branch.
    ...

Finally, if the user is a member of the team, we display the same "you can
upload" message as before. Of course the upload URL looks different, in
particular the login should be the user name, while the branch URL reflects the
owning team's name.

    >>> name12_browser.open(branch_page)
    >>> content = name12_browser.contents
    >>> instructions = find_tag_by_id(content, 'upload-directions')
    >>> print(extract_text(instructions))
    Update this branch:
    bzr push --use-existing-dir
    lp://dev/~landscape-developers/gnome-terminal/pushed


Import branch
-------------

Upload directions should not be displayed for import branches.

    >>> import_branch_page = (
    ...     'http://code.launchpad.test/~vcs-imports/evolution/main')
    >>> anon_browser.open(import_branch_page)
    >>> content = anon_browser.contents
    >>> instructions = find_tag_by_id(content, 'upload-directions')
    >>> print(instructions)
    None
