# Copyright 2009-2010 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

from lazr.enum import (
    DBEnumeratedType,
    DBItem,
    )
from zope.interface import (
    Attribute,
    Interface,
    )
from zope.schema import (
    Bool,
    Choice,
    Datetime,
    Int,
    List,
    Object,
    Text,
    )

from lp import _
from lp.registry.interfaces.person import IPerson
from lp.translations.interfaces.pofile import IPOFile
from lp.translations.interfaces.potemplate import IPOTemplate
from lp.translations.interfaces.potmsgset import IPOTMsgSet
from lp.translations.interfaces.potranslation import IPOTranslation


__all__ = [
    'ITranslationMessage',
    'ITranslationMessageSet',
    'ITranslationMessageSuggestions',
    'RosettaTranslationOrigin',
    'TranslationConflict',
    'TranslationValidationStatus',
    ]


class TranslationConflict(Exception):
    """Someone updated the translation we are trying to update."""


class RosettaTranslationOrigin(DBEnumeratedType):
    """Rosetta Translation Origin

    Translation sightings in Rosetta can come from a variety
    of sources. We might see a translation for the first time
    in CVS, or we might get it through the web, for example.
    This schema documents those options.
    """

    SCM = DBItem(1, """
        Source Control Management Source

        This translation sighting came from a PO File we
        analysed in a source control managements sytem first.
        """)

    ROSETTAWEB = DBItem(2, """
        Rosetta Web Source

        This translation was presented to Rosetta via
        the community web site.
        """)

    LAUNCHPAD_GENERATED = DBItem(3, """
        Generated by Launchpad itself.

        This is used for messages like generated translation
        credits messages.
        """)


class TranslationValidationStatus(DBEnumeratedType):
    """Translation Validation Status

    Every time a translation is added to Rosetta we should checked that
    follows all rules to be a valid translation inside a .po file.
    This schema documents the status of that validation.
    """

    UNKNOWN = DBItem(0, """
        Unknown

        This translation has not been validated yet.
        """)

    OK = DBItem(1, """
        Ok

        This translation has been validated and no errors were discovered.
        """)

    UNKNOWNERROR = DBItem(2, """
        Unknown Error

        This translation has an unknown error.
        """)


class ITranslationMessage(Interface):
    """A translation message in a translation file."""

    id = Int(
        title=_("The ID for this translation message"),
        readonly=True, required=True)

    browser_pofile = Object(
        title=_("The translation file from where this translation comes"),
        readonly=False, required=False, schema=IPOFile)

    sequence = Int(
        title=_("Sequence of a message in the PO file browser_pofile."),
        readonly=True, required=False)

    potemplate = Object(
        title=_("The template this translation is in"),
        readonly=False, required=False, schema=IPOTemplate)

    language = Choice(
        title=_('Language of this translation message.'),
        vocabulary='Language', required=False)

    potmsgset = Object(
        title=_("The template message that this translation is for"),
        readonly=False, required=True, schema=IPOTMsgSet)

    date_created = Datetime(
        title=_("The date we saw this translation first"),
        readonly=True, required=True)

    submitter = Object(
        title=_("The submitter of this translation"),
        readonly=True, required=True, schema=IPerson)

    date_reviewed = Datetime(
        title=_("The date when this message was reviewed for last time"),
        readonly=False, required=False)

    reviewer = Object(
        title=_("The person who reviewed and accepted this translation"),
        readonly=False, required=False, schema=IPerson)

    # Message references for up to TranslationConstants.MAX_PLURAL_FORMS
    # plural forms.
    msgstr0 = Object(
        title=_("Translation for plural form 0 (if any)"),
        required=False, schema=IPOTranslation)

    msgstr1 = Object(
        title=_("Translation for plural form 1 (if any)"),
        required=False, schema=IPOTranslation)

    msgstr2 = Object(
        title=_("Translation for plural form 2 (if any)"),
        required=False, schema=IPOTranslation)

    msgstr3 = Object(
        title=_("Translation for plural form 3 (if any)"),
        required=False, schema=IPOTranslation)

    msgstr4 = Object(
        title=_("Translation for plural form 4 (if any)"),
        required=False, schema=IPOTranslation)

    msgstr5 = Object(
        title=_("Translation for plural form 5 (if any)"),
        required=False, schema=IPOTranslation)

    all_msgstrs = List(
        title=_("All msgstr attributes"),
        description=_("""
            All translations [msgstr0, msgstr1, ...] for this message,
            including any empty ones.
            """), readonly=True, required=True)

    translations = List(
        title=_("Translations for this message"),
        description=_("""
            All translations for this message, its number will depend on the
            number of plural forms available for its language.
            """), readonly=True, required=True)

    comment = Text(
        title=_("Text of translator comment from the translation file"),
        readonly=False, required=False)

    origin = Choice(
        title=_("Where the submission originally came from"),
        values=RosettaTranslationOrigin,
        readonly=True, required=True)

    validation_status = Choice(
        title=_("The status of the validation of the translation"),
        values=TranslationValidationStatus,
        readonly=False, required=True)

    is_current_ubuntu = Bool(
        title=_("Whether this translation is being used in Ubuntu"),
        readonly=False, default=False, required=True)

    is_complete = Bool(
        title=_("Whether the translation has all needed plural forms or not"),
        readonly=True, required=True)

    is_current_upstream = Bool(
        title=_(
            "Whether this translation is being used in latest imported file"),
        readonly=False, default=False, required=True)

    was_obsolete_in_last_import = Bool(
        title=_(
            "Whether this translation was obsolete in last imported file"),
        readonly=False, default=False, required=True)

    is_empty = Bool(
        title=_("Whether this message has any translation"),
        readonly=True, required=True)

    plural_forms = Int(
        title=_("Number of plural form translations in this translation."),
        readonly=True, required=True)

    is_diverged = Bool(
        title=_("Is this message diverged?"), readonly=True, required=True)

    def setPOFile(pofile):
        """Set a POFile for use in views."""

    def getOnePOFile():
        """Get any POFile containing this translation."""

    def ensureBrowserPOFile():
        """Assign the result of getOnePOFile to browser_pofile.

        If browser_pofile is already set, it is left unchanged.
        """

    def getSharedEquivalent():
        """Find shared message that otherwise exactly matches this one."""

    def shareIfPossible():
        """Make this message shared, if possible.

        If there is already a similar message that is shared, this
        message's information is merged into that of the existing one,
        and self is deleted.
        """

    def isHidden(pofile):
        """Whether this is an unused, hidden suggestion in `pofile`.

        A suggestion is hidden if it's older than the current translation.
        """

    # Used in a script to remove upstream translations.
    def destroySelf():
        """Remove this object.

        It must not be referenced by any other object.
        """

    def clone(potmsgset):
        """Create a copy of this message associated with a different MsgSet.

        potemplate of the clone is always None.  Aside from this, all values
        should be the same.
        """

    def approve(pofile, reviewer, share_with_other_side=False,
                lock_timestamp=None):
        """Approve this suggestion, making it a current translation."""

    def approveAsDiverged(pofile, reviewer, lock_timestamp=None):
        """Approve this suggestion, as a diverged translation."""

    def acceptFromImport(pofile, share_with_other_side=False,
                         lock_timestamp=None):
        """Accept a suggestion coming from a translation import."""

    def acceptFromUpstreamImportOnPackage(pofile, lock_timestamp=None):
        """Accept a suggestion coming from a translation import.

        This method allows to mark a translation as being current in
        upstream even though there is no upstream template.
        """

    # XXX CarlosPerelloMarin 20071022: We should move this into browser code.
    def makeHTMLID(description):
        """Unique identifier for self, suitable for use in HTML element ids.

        Constructs an identifier for use in HTML.  This identifier matches the
        format parsed by `BaseTranslationView`.

        :param description: a keyword to be embedded in the id string, e.g.
            "suggestion" or "translation."  Must be suitable for use in an
            HTML element id.
        """

    def markReviewed(reviewer, timestamp=None):
        """Mark this message as reviewed.

        Sets the reviewer and review date for this message.

        :param reviewer: the person who reviewed the message.
        :param timestamp: optional timestamp indicating when the review
            happened.  Defaults to "now."
        """


class ITranslationMessageSuggestions(Interface):
    """Suggested `ITranslationMessage`s for a `POTMsgSet`.

    When displaying `POTMsgSet`s in `CurrentTranslationMessageView`
    we display different types of suggestions: non-reviewer translations,
    translations that occur in other contexts, and translations in
    alternate languages. See
    `CurrentTranslationMessageView._buildAllSuggestions` for details.
    """
    title = Attribute("The name displayed next to the suggestion, "
                      "indicating where it came from.")
    submissions = Attribute("An iterable of submissions.")
    user_is_official_translator = Bool(
        title=(u'Whether the user is an official translator.'),
        required=True)


class ITranslationMessageSet(Interface):
    """Getting to TranslationMessages from the view code."""

    def getByID(id):
        """Return the TranslationMessage with the given ID or None."""

    def preloadDetails(messages, pofile=None, need_pofile=False,
                       need_potemplate=False, need_potemplate_context=False,
                       need_potranslation=False, need_potmsgset=False,
                       need_people=False):
        """Preload lots of details for `TranslationMessage`s.

        If need_pofile is True, pofile may be left None to indicate that
        an arbitrary `POFile` containing that message may be picked, or
        set to a specific `POFile` in which all the messages must exist.
        In either case, all messages must be for the same language.
        """

    def preloadPOFilesAndSequences(messages, pofile=None):
        """Preload browser_pofile and sequence for `TranslationMessage`s.

        All messages must be for the same language.

        If pofile is None, an arbitrary POFile containing each message
        will be used. Otherwise, each message must exist in the given
        POFile.
        """
