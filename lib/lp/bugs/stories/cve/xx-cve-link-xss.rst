Cross-Site Scripting, or XSS
----------------------------

The CVE Sequence Number field and its related messages are properly
escaped in order to prevent XSS.

    >>> user_browser.open("http://launchpad.test/firefox/+bug/6/+linkcve")
    >>> user_browser.getControl(
    ...     "CVE Sequence Number"
    ... ).value = '<script>alert("cheezburger");</script>'
    >>> user_browser.getControl("Continue").click()

The value can be obtained correctly, which indicates that the markup
is parse-able:

    >>> user_browser.getControl("CVE Sequence Number").value
    '<script>alert("cheezburger");</script>'

Indeed, the markup is valid and correctly escaped:

    >>> print(
    ...     find_tag_by_id(user_browser.contents, "field.sequence").prettify()
    ... )
    <input class="textType" id="field.sequence"
           name="field.sequence" size="20" type="text"
           value='&lt;script&gt;alert("cheezburger");&lt;/script&gt;'/>

The error message is also valid and correctly escaped:

    >>> for tag in find_tags_by_class(user_browser.contents, "message"):
    ...     print(tag.prettify())
    ...
    <p class="error message">
    There is 1 error.
    </p>
    <BLANKLINE>
    <div class="message">
    &lt;script&gt;alert("cheezburger");&lt;/script&gt;
      is not a valid CVE number
    </div>

The script we tried to inject is not present, unescaped, anywhere in
the page:

    >>> '<script>alert("cheezburger");</script>' in user_browser.contents
    False
